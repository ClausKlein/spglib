name: test

on:
  workflow_call:

permissions:
  contents: read

jobs:

  tests:
    name: >
      🖥️ ${{ matrix.os || 'Fedora' }} +
      ${{ !matrix.os && format('🛠️ {0} +', matrix.toolchain) || '' }}
      🐍 ${{ matrix.python-version }}
      ${{ matrix.experimental && '[🧪 Experimental]' || '' }}
    runs-on: ${{ matrix.os || 'ubuntu-latest' }}
    container: ${{ !matrix.os && 'ghcr.io/lecrisut/dev-env:main' || '' }}
    continue-on-error: ${{ matrix.experimental || false }}
    strategy:
      fail-fast: false
      matrix:
        toolchain: [ gcc, llvm, intel, windows, macos ]
        python-version: [ "3.8", "3.9", "3.10", "3.11", "3.12" ]
        include:
          - os: windows-2019
            toolchain: windows
          - os: macos-11
            toolchain: macos
          - os: windows-latest
            toolchain: windows
            experimental: true
          - os: macos-latest
            toolchain: macos
            experimental: true
          - python-version: "3.12"
            experimental: true
            pip-extra-flags: --pre
    steps:
      - name: Enable msvc toolchain on windows
        uses: ilammy/msvc-dev-cmd@v1
        if: contains(matrix.os, 'windows')
      - name: Activate Intel compilers
        # Not elegant, it will propagate all environment variable.
        # Intel does not provide a way to output the environment variables to a file
        # Note: PATH needs to be exported to GITHUB_PATH otherwise it can be overwritten
        run: |
          source /opt/intel/oneapi/setvars.sh
          printenv >> $GITHUB_ENV
          echo $PATH >> $GITHUB_PATH
        if: matrix.toolchain == 'intel'
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      # workaround for https://github.com/actions/runner/issues/2033
      - name: ownership workaround
        run: git config --system --add safe.directory '*'
      - name: Patch /etc/lsb-release for experimental python
        # Mimic Ubuntu in order to be able to download experimental python
        run: |
          echo -en 'DISTRIB_ID=Ubuntu\nDISTRIB_RELEASE=22.04\nDISTRIB_CODENAME=jammy\nDISTRIB_DESCRIPTION="Ubuntu 22.04.3 LTS"' >> /etc/lsb-release
        if: ${{ !matrix.os && matrix.experimental }}
      - name: Setup python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          allow-prereleases: true
        # TODO: Replace with editable install once configure presets are available
      - name: Install python bindings
        run: python3 -m pip install  ${{ matrix.pip-extra-flags }} .[test]
      - uses: lukka/get-cmake@latest
      - name: Run CMake configuration for ${{ matrix.toolchain }} toolchain
        uses: lukka/run-cmake@v10.3
        with:
          workflowPreset: "${{ matrix.toolchain }}-ci"
